set nocompatible

let s:dotvim = '.vim'

if has('win32')
    let s:dotvim = 'vimfiles'
endif

let s:bundle_path = '~/' . s:dotvim . '/bundle'

call plug#begin(s:bundle_path)

Plug 'tpope/vim-sensible'

Plug 'airblade/vim-gitgutter'
Plug 'easymotion/vim-easymotion'
Plug 'editorconfig/editorconfig-vim'
Plug 'godlygeek/tabular'
Plug 'jiangmiao/auto-pairs'
Plug 'jlanzarotta/bufexplorer'
Plug 'mattn/emmet-vim'
Plug 'mbbill/undotree'
Plug 'andymass/vim-matchup'
Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }
Plug 'Yggdroot/indentLine'
Plug 'jeffkreeftmeijer/vim-numbertoggle'

" Plug 'majutsushi/tagbar'
" Plug 'ervandew/supertab'
" Plug 'justinmk/vim-sneak'
" Plug 'liuchengxu/vim-which-key', { 'on': ['WhichKey', 'WhichKey!'] }

Plug 'neoclide/coc.nvim', {'branch': 'release'}

Plug 'mileszs/ack.vim'

Plug 'preservim/nerdcommenter'
Plug 'preservim/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'

" Plug 'sjl/gundo.vim'

Plug 'terryma/vim-expand-region'
Plug 'terryma/vim-multiple-cursors'

Plug 'tommcdo/vim-exchange'

Plug 'tpope/vim-abolish'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'

Plug 'vim-airline/vim-airline'

" Syntax
Plug 'sheerun/vim-polyglot'

" Snippets
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'tgmeng/lazy-vim-snippets'

" ColorSchemes
Plug 'tomasr/molokai'

" Font
Plug 'ryanoasis/vim-devicons'

call plug#end()
